{"version":3,"file":"vuex-reactive-persist.js","sources":["../src/doto.js","../src/storage.js","../src/index.js"],"sourcesContent":["export default {\n  get: require('get-value'),\n  set: require('set-value'),\n  has: require('has-value'),\n  keys(obj, prefix) {\n    let paths = [];\n    prefix = (prefix && prefix + '.') || '';\n    Object.keys(obj).forEach(key => {\n      if (obj[key] instanceof Object) {\n        paths = paths.concat(this.keys(obj[key], prefix + key));\n      } else {\n        paths.push(prefix + key);\n      }\n    });\n    return paths;\n  }\n};\n","export default class Storage {\n  constructor({ key, storage, reducer, parser }) {\n    this.key = key || 'vuex';\n    this.previousValue = '{}';\n\n    this.reducer = reducer || JSON.stringify;\n    this.parser = parser || JSON.parse;\n    this.storage = storage || {\n      getItem: k => window.localStorage[k],\n      setItem: (k, v) => (window.localStorage[k] = v)\n    };\n  }\n\n  getState() {\n    try {\n      this.previousValue = this.storage.getItem(this.key);\n      return this.parser(this.previousValue);\n    } catch (err) {\n      return null;\n    }\n  }\n\n  setState(val) {\n    try {\n      this.previousValue = this.reducer(val);\n    } catch (err) {\n    } finally {\n      this.storage.setItem(this.key, this.previousValue);\n    }\n  }\n\n  on(callback, interval) {\n    // watch every 1000s for changed values\n    setInterval(() => {\n      const saved = this.storage.getItem(this.key);\n      if (this.previousValue !== saved) {\n        this.previousValue = saved;\n        callback(this.parser(saved), this.parser(this.previousValue));\n      }\n    }, interval || 1000);\n  }\n}\n","import dot from './doto';\nimport Storage from './storage';\n\nexport default function(opt) {\n  opt = opt || {};\n  opt.storage = new Storage(opt);\n  opt.watchInterval = opt.watchInterval || 1000;\n\n  // filters the mutation type\n  opt.filter =\n    opt.filter || (x => !opt.mutations || opt.mutations.indexOf(x) >= 0);\n\n  // replace the current state with new state from storage\n  opt.replaceState = () => {\n    const savedState = opt.storage.getState();\n    if (!savedState) return;\n    const mergedState = Object.assign({}, opt.store.state, savedState);\n    opt.store.replaceState(mergedState);\n  };\n\n  // stores the current state\n  opt.storeState = state => {\n    state = state || opt.store.state;\n    let picked = opt.paths ? {} : state;\n    opt.paths &&\n      opt.paths.forEach(path => {\n        dot.set(picked, path, dot.get(state, path));\n      });\n    opt.storage.setState(picked);\n  };\n\n  // find changes between previous and current state and callback watches\n  opt.invokeWatchers = ({ state, reverse }) => {\n    let hasChange = false;\n    state = state || opt.store.state;\n    const prevState = opt.storage.getState() || {};\n    (opt.paths || dot.keys(state)).forEach(path => {\n      const stateVal = dot.get(state, path);\n      const savedVal = dot.get(prevState, path);\n      if (stateVal === savedVal) return;\n      hasChange = true;\n      if (dot.has(opt.watch, path)) {\n        dot.get(opt.watch, path)(\n          reverse ? savedVal : stateVal,\n          reverse ? stateVal : savedVal,\n          opt.store\n        );\n      }\n    });\n    return hasChange;\n  };\n\n  return function(store) {\n    opt.store = store;\n    // restore state\n    opt.replaceState();\n    opt.storeState();\n    opt.initialized && opt.initialized(store);\n\n    // watch storage value change\n    if (opt.watchInterval >= 0) {\n      opt.storage.on(() => {\n        opt.invokeWatchers({ reverse: true });\n        opt.replaceState();\n      }, opt.watchInterval);\n    }\n\n    store.subscribe((mutation, state) => {\n      // check if mutation type should be considered\n      if (!opt.filter(mutation.type || mutation)) return;\n      // find current changes\n      const hasChange = opt.invokeWatchers({ state });\n      // save only on change\n      if (!hasChange) return;\n      opt.storeState(state);\n    });\n  };\n}\n"],"names":["get","require","set","has","keys","obj","prefix","paths","Object","forEach","key","concat","this","push","Storage","ref","storage","reducer","parser","previousValue","JSON","stringify","parse","k","window","localStorage","v","getState","getItem","err","setState","val","setItem","on","callback","interval","saved","opt","watchInterval","filter","x","mutations","indexOf","replaceState","const","savedState","mergedState","assign","store","state","storeState","let","picked","path","dot","invokeWatchers","reverse","hasChange","prevState","stateVal","savedVal","watch","initialized","subscribe","mutation","type"],"mappings":"AAAA,OACEA,IAAKC,QAAQ,aACbC,IAAKD,QAAQ,aACbE,IAAKF,QAAQ,aACbG,cAAKC,EAAKC,cACJC,KASJ,OARAD,EAAUA,GAAUA,EAAS,KAAQ,GACrCE,OAAOJ,KAAKC,GAAKI,iBAAQC,GACnBL,EAAIK,aAAgBF,OACtBD,EAAQA,EAAMI,OAAOC,EAAKR,KAAKC,EAAIK,GAAMJ,EAASI,IAElDH,EAAMM,KAAKP,EAASI,KAGjBH,ICdUO,EACnB,SAAYC,OAAOC,YAASC,YAASC,gBAC9BR,WAAa,YACbS,cAAgB,UAEhBF,QAAUA,GAAWG,KAAKC,eAC1BH,OAASA,GAAUE,KAAKE,WACxBN,QAAUA,qBACJO,UAAKC,OAAOC,aAAaF,qBACxBA,EAAGG,UAAOF,OAAOC,aAAaF,GAAKG,iBAIjDC,oCAESR,cAAgBP,KAAKI,QAAQY,QAAQhB,KAAKF,KACxCE,KAAKM,OAAON,KAAKO,qBACjBU,UACA,mBAIXC,kBAASC,YAEAZ,cAAgBP,KAAKK,QAAQc,SAC3BF,iBAEFb,QAAQgB,QAAQpB,KAAKF,IAAKE,KAAKO,6BAIxCc,YAAGC,EAAUC,yCAGHC,EAAQxB,EAAKI,QAAQY,QAAQhB,EAAKF,KACpCE,EAAKO,gBAAkBiB,MACpBjB,cAAgBiB,IACZxB,EAAKM,OAAOkB,GAAQxB,EAAKM,OAAON,EAAKO,kBAE/CgB,GAAY,qBCpCJ,SAASE,GAiDtB,OAhDAA,EAAMA,OACFrB,QAAU,IAAIF,EAAQuB,GAC1BA,EAAIC,cAAgBD,EAAIC,eAAiB,IAGzCD,EAAIE,OACFF,EAAIE,iBAAWC,UAAMH,EAAII,WAAaJ,EAAII,UAAUC,QAAQF,IAAM,GAGpEH,EAAIM,wBACFC,IAAMC,EAAaR,EAAIrB,QAAQW,WAC/B,GAAKkB,EAAL,CACAD,IAAME,EAActC,OAAOuC,UAAWV,EAAIW,MAAMC,MAAOJ,GACvDR,EAAIW,MAAML,aAAaG,KAIzBT,EAAIa,oBAAaD,GACfA,EAAQA,GAASZ,EAAIW,MAAMC,MAC3BE,IAAIC,EAASf,EAAI9B,SAAa0C,EAC9BZ,EAAI9B,OACF8B,EAAI9B,MAAME,iBAAQ4C,GAChBC,EAAIpD,IAAIkD,EAAQC,EAAMC,EAAItD,IAAIiD,EAAOI,MAEzChB,EAAIrB,QAAQc,SAASsB,IAIvBf,EAAIkB,wBAAkBxC,OAAEkC,UAAOO,YACzBC,GAAY,EAChBR,EAAQA,GAASZ,EAAIW,MAAMC,MAC3BL,IAAMc,EAAYrB,EAAIrB,QAAQW,eAc9B,OAbCU,EAAI9B,OAAS+C,EAAIlD,KAAK6C,IAAQxC,iBAAQ4C,GACrCT,IAAMe,EAAWL,EAAItD,IAAIiD,EAAOI,GAC1BO,EAAWN,EAAItD,IAAI0D,EAAWL,GAChCM,IAAaC,IACjBH,GAAY,EACRH,EAAInD,IAAIkC,EAAIwB,MAAOR,IACrBC,EAAItD,IAAIqC,EAAIwB,MAAOR,EAAnBC,CACEE,EAAUI,EAAWD,EACrBH,EAAUG,EAAWC,EACrBvB,EAAIW,UAIHS,GAGF,SAAST,GACdX,EAAIW,MAAQA,EAEZX,EAAIM,eACJN,EAAIa,aACJb,EAAIyB,aAAezB,EAAIyB,YAAYd,GAG/BX,EAAIC,eAAiB,GACvBD,EAAIrB,QAAQiB,cACVI,EAAIkB,gBAAiBC,SAAS,IAC9BnB,EAAIM,gBACHN,EAAIC,eAGTU,EAAMe,mBAAWC,EAAUf,GAEpBZ,EAAIE,OAAOyB,EAASC,MAAQD,IAEf3B,EAAIkB,sBAAiBN,KAGvCZ,EAAIa,WAAWD"}